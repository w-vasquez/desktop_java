/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EncargadoDeLaboratorio;

import static EncargadoDeLaboratorio.frmCrearhorarios.lstregistros;
import static EncargadoDeLaboratorio.frmVistaCalificacion.lstregistros;
import com.google.gson.Gson;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import tablas.Horarios;
import tablas.mostrarHorarios;

/**
 *
 * @author CRUZ_2019
 */
public class frmVistaHorarios extends javax.swing.JFrame {

    /**
     * Creates new form frmVistaHorarios
     */
    Horarios objhorarios;
    mostrarHorarios objhorarioss;
    public Integer totalregistros;
    DefaultTableModel modelo;
    Statement objEjecutaConsulta;

    public frmVistaHorarios() {
        initComponents();
        this.setLocationRelativeTo(this);
         objhorarioss = new mostrarHorarios();
        modelo = new DefaultTableModel();

        lstregistros.setModel(modelo);

        mostrar("");
    }
    void mostrar(String buscar) {
        // TODO add your handling code here:
        //Instanciar clase de la tabla

        Gson gson = new Gson();

        totalregistros = 0;
        //instansiar la clase Gson que convierte el Json a array en java
        //Gson gson = new Gson();
        //envio datos al metodo
        String url = "http://limpieza.azurewebsites.net/WS/API/vistaHorario/mostrar.php";

        //Ejecuto consulta con los parametros de link
        String elJson = objhorarioss.consultaCrediencial(url);

        //convertir a objeto de java
        mostrarHorarios[] listado = gson.fromJson(elJson, mostrarHorarios[].class);
        DefaultTableModel modelo;
        modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("HORARIO");
        modelo.addColumn("ORDENANZA");
        modelo.addColumn("ID");
        modelo.addColumn("FECHA CREACION");
        modelo.addColumn("FECHA INICIO");
        modelo.addColumn("FECHA FINAL");
        modelo.addColumn("HORA INICIO");
        modelo.addColumn("HORA FINAL");
        modelo.addColumn("ID");
        modelo.addColumn("LABORATORIO");
        modelo.addColumn("L");
        modelo.addColumn("M");
        modelo.addColumn("MI");
        modelo.addColumn("J");
        modelo.addColumn("V");
        modelo.addColumn("S");
        modelo.addColumn("D");
        modelo.addColumn("NOTIFICACION");

        Vector fila;
        lstregistros.setModel(modelo);

        //PARA SABER CUANTOS REGISTROS EXISTEN
        //int cantidadRegistros = objUsuarios.getCantidadRegistros();
        //PARA CREAR REGISTROS POR REGISTROS
        //DE LA TABLA DE NUESTRA BASE DE DATOS
        for (mostrarHorarios registros : listado) {

            //CREAMOS UNA NUEVA FILA PARA LA TABLA
            fila = new Vector();
            // AGREGAMOS LA MISMA FILA PARA LA TABLA
            //A NUESTRO VECTOR

            //fila.add(indice);
            fila.add(registros.getIdHorario());
            fila.add(registros.getNomHorario());
            fila.add(registros.getNomUsuario() + "  " + registros.getApeUsuario());
            //fila.add(registros.getApeUsuario());
            fila.add(registros.getIdOrdenanza());
            fila.add(registros.getfCrea());
            fila.add(registros.getfIni());
            fila.add(registros.getfFin());
            fila.add(registros.gethIni());
            fila.add(registros.gethFin());
            fila.add(registros.getIdLaboratorio());
            fila.add(registros.getNomLab());
            fila.add(registros.getLunes());
            fila.add(registros.getMartes());
            fila.add(registros.getMiercoles());
            fila.add(registros.getJueves());
            fila.add(registros.getViernes());
            fila.add(registros.getSabado());
            fila.add(registros.getDomingo());
            fila.add(registros.getNotificacion());

            //AGREGAMOS LA FILA COMPLETA DE DATOS
            //AL CONTENEDOR QUE ESTAMOS DIBUJANDO
            totalregistros++;
            modelo.addRow(fila);
        }
        lblregistros.setText("Total registros: " + Integer.toString(totalregistros));
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstregistros = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        txtidhorariobuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnsalir = new javax.swing.JButton();
        lblregistros = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de horarios"));

        lstregistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        lstregistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstregistrosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lstregistrosMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(lstregistros);

        jLabel13.setText("Horario:");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnsalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir.gif"))); // NOI18N
        btnsalir.setText("Salir");
        btnsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsalirActionPerformed(evt);
            }
        });

        lblregistros.setText("Registros:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblregistros)
                .addGap(82, 82, 82))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(txtidhorariobuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnsalir)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtidhorariobuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnsalir))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblregistros)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstregistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstregistrosMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_lstregistrosMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:

        Gson gson = new Gson();
        Horarios func = new Horarios();

        String idhorario = txtidhorariobuscar.getText();

        String url = "http://limpieza.azurewebsites.net/WS/API/horario/mostrarP.php?";

        String parametros = "idHorario=" + idhorario;

        //Ejecuto consulta con los parametros de link
        String elJson = "[" + func.consultaCrediencial(url + parametros) + "]";

        try {

            if (!txtidhorariobuscar.getText().equals("")) {
                //Ejecuto consulta con los parametros de link

                //convertir a objeto de java
                Horarios[] listado = gson.fromJson(elJson, Horarios[].class);
                DefaultTableModel modelo;
                modelo = new DefaultTableModel();
                modelo = new DefaultTableModel();
                modelo.addColumn("ID");
                modelo.addColumn("LUNES");
                modelo.addColumn("MARTES");
                modelo.addColumn("MIERCOLES");
                modelo.addColumn("JUEVES");
                modelo.addColumn("VIERNES");
                modelo.addColumn("SABADO");
                modelo.addColumn("DOMINGO");
                modelo.addColumn("FECHA INICIO");
                modelo.addColumn("FECHA FINAL");
                modelo.addColumn("HORA INICIO");
                modelo.addColumn("HORA FINAL");
                modelo.addColumn("NOMBRE");
                modelo.addColumn("ORDENZA");
                modelo.addColumn("FECHA CREACION");
                modelo.addColumn("LABORATORIO");
                modelo.addColumn("NOTIFICACION");

                Vector fila;

                //PARA SABER CUANTOS REGISTROS EXISTEN
                //int cantidadRegistros = objUsuarios.getCantidadRegistros();
                //PARA CREAR REGISTROS POR REGISTROS
                //DE LA TABLA DE NUESTRA BASE DE DATOS
                //CREAMOS UNA NUEVA FILA PARA LA TABLA
                fila = new Vector();
                // AGREGAMOS LA MISMA FILA PARA LA TABLA
                //A NUESTRO VECTOR

                //fila.add(indice);
                fila.add(listado[0].getIdHorario());
                fila.add(listado[0].getLunes());
                fila.add(listado[0].getMartes());
                fila.add(listado[0].getMiercoles());
                fila.add(listado[0].getJueves());
                fila.add(listado[0].getViernes());
                fila.add(listado[0].getSabado());
                fila.add(listado[0].getDomingo());
                fila.add(listado[0].getFechaInicio());
                fila.add(listado[0].getFechaFin());
                fila.add(listado[0].getHoraInicio());
                fila.add(listado[0].getHoraFin());
                fila.add(listado[0].getNombre());
                fila.add(listado[0].getOrdenanza());
                fila.add(listado[0].getFechaCreacion());
                fila.add(listado[0].getLaboratorio());
                fila.add(listado[0].getNotificacion());

                //AGREGAMOS LA FILA COMPLETA DE DATOS
                //AL CONTENEDOR QUE ESTAMOS DIBUJANDO
                totalregistros++;
                modelo.addRow(fila);
                lstregistros.setModel(modelo);

            } else {
                mostrar("");
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnsalirActionPerformed

    private void lstregistrosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstregistrosMousePressed
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int fila = lstregistros.getSelectedRow();
            String cod;
            String valor;

            cod = lstregistros.getValueAt(fila, 0).toString();
              
               
            frmCrearNotificacion.txthorario.setText(cod);
            this.dispose();

        }
    }//GEN-LAST:event_lstregistrosMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmVistaHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmVistaHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmVistaHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmVistaHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmVistaHorarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnsalir;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblregistros;
    public static javax.swing.JTable lstregistros;
    private javax.swing.JTextField txtidhorariobuscar;
    // End of variables declaration//GEN-END:variables
}
